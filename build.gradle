buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "org.flywaydb.flyway" version "6.2.4"
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.kdt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


ext {
	set('springCloudVersion', "2021.0.3")
}

jar {
	enabled = false
}

repositories {
	mavenCentral()
}

dependencies {
	//SPRING WEB
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//SPRING SECURITY
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//VALIDATION
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//QUERYDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	//DB
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// LOMBOK
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// SWAGGER
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.9'

	//TEST
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//JWT
	implementation 'com.auth0:java-jwt:3.18.1'

	implementation 'com.google.guava:guava:31.1-jre'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'commons-io:commons-io:2.11.0'

	//FLYWAY
	implementation "org.flywaydb:flyway-mysql"
	implementation 'org.flywaydb:flyway-core:8.5.12'
	testImplementation 'org.flywaydb.flyway-test-extensions:flyway-spring-test:7.0.0'

	//JASYPT
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	//QLRM
	implementation 'org.qlrm:qlrm:3.0.4'

	// ANNOTATION PROCESSOR
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	//FEIGN CLIENT
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	//OAUTH
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Amazon S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//CLOUD WATCH LOG
	compile group: 'ca.pjer', name: 'logback-awslogs-appender', version: '1.6.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('compileJava') {
	inputs.files(tasks.named('processResources'))
}

tasks.named('test') {
	useJUnitPlatform()
}

/***************************
 ** QueryDSL Config Start **
 ***************************/
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}

// 여기부터는 Gradle 5.0 이후로 추가 작성
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
/***************************
 *** QueryDSL Config End ***
 ***************************/
flyway {
	configFiles = ['flyway.conf']
}